class Timer
!!!175746.cpp!!!	Timer()

    //Initialize the variables
    startTicks = 0;
    pausedTicks = 0;
    paused = false;
    started = false;
	_contando = -1;
	lastUpdateTicks = 0;
	start();
!!!175874.cpp!!!	getInstance() : Timer

	static Timer instance;
	return instance;
!!!176130.cpp!!!	start() : void

    //Start the timer
    started = true;
    
    //Unpause the timer
    paused = false;
    _contando = -1;
    //Get the current clock time
    startTicks = SDL_GetTicks();    
!!!176258.cpp!!!	stop() : void

    //Stop the timer
    started = false;
    
    //Unpause the timer
    paused = false;    
!!!176386.cpp!!!	pause() : void

    //If the timer is running and isn't already paused
    if( ( started == true ) && ( paused == false ) )
    {
        //Pause the timer
        paused = true;
    
        //Calculate the paused ticks
        pausedTicks = SDL_GetTicks() - startTicks;
    }
!!!176514.cpp!!!	unpause() : void

    //If the timer is paused
    if( paused == true )
    {
        //Unpause the timer
        paused = false;
    
        //Reset the starting ticks
        startTicks = SDL_GetTicks() - pausedTicks;
        
        //Reset the paused ticks
        pausedTicks = 0;
    }
!!!176642.cpp!!!	wait(in tiempo : int) : bool

	if(_contando == -1)
	{
		_contando = get_ticks();
	}
	if(get_ticks() > _contando+tiempo)
	{
		_contando = -1;
		return true;
	}
	else
	{
		return false;
	}
!!!176770.cpp!!!	get_ticks() : int

	//If the timer is running
	if (started == true)
	{
		//If the timer is paused
		if (paused == true)
		{
			//Return the number of ticks when the timer was paused
			return pausedTicks;
		}
		else
		{
			//Return the current time minus the start time
			return SDL_GetTicks() - startTicks;
		}
	}

	//If the timer isn't running
	return 0;
!!!176898.cpp!!!	getUpdateTicks() : int

	int t;
	if (lastUpdateTicks == 0)
	{
		lastUpdateTicks = SDL_GetTicks() - startTicks;
		t = 1;
	}
	else
	{
		t = (SDL_GetTicks() - startTicks) - lastUpdateTicks;
	}
    //If the timer is running
    if( started == true )
    {
        //If the timer is paused
        if( paused == true )
        {
            //Return the number of ticks when the timer was paused
            return pausedTicks;
        }
        else
        {
            //Return the current time minus the start time
			return t;

        }    
    }
    
    //If the timer isn't running
    return 0;    
!!!177026.cpp!!!	is_started() : bool

    return started;    
!!!177154.cpp!!!	is_paused() : bool

    return paused;    
